language: python
python:
  # We don't actually use the Travis Python, but this keeps it organized.
  - "2.7"
  - "3.6"

stages:
  - lint
  - test
  - name: deploy-pip
    if: tag =~ ^\d+\.\d+\.\d+$
  - name: deploy-conda
    if: tag =~ ^\d+\.\d+\.\d+$

install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # Create environment
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
  - source activate test-environment
  # Install dependencies
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      pip install -r requirements-py2.txt;
    else
      pip install -r requirements-py3.txt;
    fi
  - python setup.py develop

script:
  - coverage run --rcfile=coverage.ini setup.py test -s tethys_dataset_services.tests.geoserver_engine_tests.TestGeoServerDatasetEngine
  - coverage report -m

jobs:
  include:
    - stage: lint
      install:
        - pip install flake8
      script:
        - flake8
    - stage: deploy-pip
      script:
        - echo "deploying to pip..."
    - stage: deploy-conda
      script:
        - echo "deploying to conda..."